[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "holdtranscribe"
version = "1.0.1"
authors = [
    { name = "binaryninja" },
]
description = "Hotkey-Activated Voice-to-Clipboard Transcriber"
readme = "README.md"

# PEP 639 license declaration:
license = "MIT"
license-files = ["LICENSE"]  # ← include your LICENSE file here:contentReference[oaicite:0]{index=0}

requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Utilities",
    "Environment :: Console",
    "Environment :: No Input/Output (Daemon)",
]
keywords = ["voice", "transcription", "whisper", "hotkey", "clipboard", "speech-to-text"]

dependencies = [
    "faster-whisper>=0.9.0",
    "sounddevice>=0.4.6",
    "pynput>=1.7.6",
    "webrtcvad>=2.0.10",
    "pyperclip>=1.8.2",
    "notify2>=0.3.1",
    "numpy>=1.21.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
gpu = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
]
tts = [
    "torch>=2.0.0",
    "moshi>=0.2.10",
    "sphn>=0.1.0",
    "sounddevice>=0.4.6",
    "huggingface_hub>=0.16.0",
]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage      = "https://github.com/binaryninja/holdtranscribe"
Repository    = "https://github.com/binaryninja/holdtranscribe"
Issues        = "https://github.com/binaryninja/holdtranscribe/issues"
Documentation = "https://github.com/binaryninja/holdtranscribe#readme"

[project.scripts]
holdtranscribe = "holdtranscribe.main:main"

[tool.setuptools.packages.find]
where   = ["."]
include = ["holdtranscribe*"]

[tool.setuptools.package-data]
holdtranscribe = ["*.txt", "*.md"]

[tool.black]
line-length    = 100
target-version = ["py38","py39","py310","py311","py312"]
include        = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile                 = "black"
line_length             = 100
multi_line_output       = 3
include_trailing_comma  = true
force_grid_wrap         = 0
use_parentheses         = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore    = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version            = "3.8"
warn_return_any           = true
warn_unused_configs       = true
disallow_untyped_defs     = false
disallow_incomplete_defs  = false
check_untyped_defs        = true
disallow_untyped_decorators = false
no_implicit_optional      = true
warn_redundant_casts      = true
warn_unused_ignores       = true
warn_no_return            = true
warn_unreachable          = true
strict_equality           = true

[tool.pytest.ini_options]
testpaths        = ["tests"]
python_files     = ["test_*.py"]
python_classes   = ["Test*"]
python_functions = ["test_*"]
addopts          = "-v --tb=short"
